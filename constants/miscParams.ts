import { Param } from '../types/params';

export const miscParams: Param[] = [
  {
    id: 'showParticipantLabels',
    label: 'Show Participant Labels?',
    type: 'boolean',
    defaultValue: false,
  },
  {
    id: 'videoSettings.roundedCorners',
    label: 'Round Corners',
    type: 'boolean',
    defaultValue: false,
  },
  {
    id: 'videoSettings.scaleMode',
    label: 'Scale Mode',
    type: 'enum',
    defaultValue: 'fill',
    values: ['fill', 'fit'],
  },
  {
    id: 'videoSettings.labels.fontFamily',
    label: 'Participant Label Font Family',
    type: 'enum',
    defaultValue: 'Roboto',
    values: [
      'Roboto',
      'RobotoCondensed',
      'Bitter',
      'Exo',
      'Magra',
      'SuezOne',
      'Teko',
    ],
    render: { key: 'showParticipantLabels', value: true },
  },
  {
    id: 'videoSettings.labels.fontWeight',
    label: 'Participant Label Font Weight',
    type: 'enum',
    defaultValue: '600',
    values: ['100', '200', '300', '400', '500', '600', '700', '800', '900'],
    render: { key: 'showParticipantLabels', value: true },
  },
  {
    id: 'videoSettings.labels.fontSize_pct',
    label: 'Participant Label Font Size',
    type: 'number',
    defaultValue: 100,
    render: { key: 'showParticipantLabels', value: true },
  },
  {
    id: 'videoSettings.labels.offset_x',
    label: 'Participant Label Offset X',
    type: 'number',
    defaultValue: 0,
    render: { key: 'showParticipantLabels', value: true },
  },
  {
    id: 'videoSettings.labels.offset_y',
    label: 'Participant Label Offset Y',
    type: 'number',
    defaultValue: 0,
    render: { key: 'showParticipantLabels', value: true },
  },
  {
    id: 'videoSettings.labels.color',
    label: 'Participant Label Text Color',
    type: 'color',
    defaultValue: '#fff',
    render: { key: 'showParticipantLabels', value: true },
  },
  {
    id: 'videoSettings.labels.strokeColor',
    label: 'Participant Label Stroke Color',
    type: 'color',
    defaultValue: 'rgba(0, 0, 0, 0.9)',
    render: { key: 'showParticipantLabels', value: true },
  },
  {
    id: 'videoSettings.margin.left_vw',
    label: 'Video Margin Left',
    type: 'number',
    defaultValue: 0,
    min: 0,
    max: 1,
    step: 0.01,
  },
  {
    id: 'videoSettings.margin.right_vw',
    label: 'Video Margin Right',
    type: 'number',
    defaultValue: 0,
    min: 0,
    max: 1,
    step: 0.01,
  },
  {
    id: 'videoSettings.margin.top_vh',
    label: 'Video Margin Top',
    type: 'number',
    defaultValue: 0,
    min: 0,
    max: 1,
    step: 0.01,
  },
  {
    id: 'videoSettings.margin.bottom_vh',
    label: 'Video Margin Bottom',
    type: 'number',
    defaultValue: 0,
    min: 0,
    max: 1,
    step: 0.01,
  },
];
